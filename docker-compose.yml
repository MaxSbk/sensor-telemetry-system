version: '3.4'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_net
  kafka:
    image: 'confluentinc/cp-kafka:latest'
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka_net
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
  influxdb:
    image: 'influxdb:1.8.10'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 20s
        order: start-first
    hostname: influxdb
    networks:
      - influxdb_net
    ports:
      - '8086:8086'
    volumes:
      - 'influxdb-storage:/var/lib/influxdb'
    environment:
      INFLUXDB_HOSTNAME: influxdb
      INFLUXDB_DB: sensors_db
      INFLUXDB_WRITE_USER: sensor_app
      INFLUXDB_WRITE_USER_PASSWORD: sensor_app
      INFLUXDB_ADMIN_USER: sensors
      INFLUXDB_ADMIN_PASSWORD: sensors
  chronograf:
    image: 'chronograf:1.9.1'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 20s
        order: start-first
    depends_on:
      - influxdb
    networks:
      - influxdb_net
    ports:
      - '8888:8888'
    volumes:
      - 'chronograf-storage:/var/lib/chronograf'
    environment:
      INFLUXDB_URL: 'http://influxdb:8086'
      INFLUXDB_USERNAME: sensors
      INFLUXDB_PASSWORD: sensors
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=grafana
  mqtt:
    image: toke/mosquitto
    ports:
      - "1883:1883"
    volumes:
      - 'mqtt-storage:/mqtt/config/conf.d'
    networks:
      - mqtt_net
  data-ingestor:
    build: ./sensor-data-ingestor/target/docker/stage
    depends_on:
      - influxdb
      - kafka
    networks:
      - influxdb_net
      - kafka_net
    environment:
      INFLUXDB_URL: 'http://influxdb:8086'
      INFLUXDB_DBNAME: sensors_db
      INFLUXDB_USERNAME: sensors
      INFLUXDB_PASSWORD: sensors
      KAFKA_URL: 'http://kafka:29092'
      KAFKA_TOPIC: sensor-data
  rest-adapter:
    build: sensor-data-rest-adapter/target/docker/stage
    depends_on:
      - kafka
      - data-ingestor
    ports:
      - '8080:8080'
    networks:
      - kafka_net
    environment:
      KAFKA_URL: 'http://kafka:29092'
      KAFKA_TOPIC: sensor-data
  mqtt-adapter:
    build: sensor-data-mqtt-adapter/target/docker/stage
    depends_on:
      - mqtt
      - kafka
    networks:
      - mqtt_net
      - kafka_net
    environment:
      MQTT_URL: 'tcp://mqtt:1883'
      KAFKA_URL: 'http://kafka:29092'
      KAFKA_TOPIC: sensor-data
networks:
  influxdb_net: null
  kafka_net: null
  mqtt_net: null
volumes:
  influxdb-storage: {}
  chronograf-storage: {}
  mqtt-storage: {}
  grafana-storage: {}
